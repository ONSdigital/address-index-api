#!/usr/bin/env groovy
def artServer = Artifactory.server 'art-p-01'
def buildInfo = Artifactory.newBuildInfo()
def distDir = 'build/dist/'

pipeline {
    libraries {
        lib('jenkins-pipeline-shared')
    }
    environment {
        SVC_NAME = "address-index-api"
        ORG = "AI"
        DEPLOY_NAME = "dev"
        GATLING_REQUESTS_PER_SECOND = 20
        GATLING_GET_ENDPOINT = "https://addressindex-api-${DEPLOY_NAME}.apps.cf1.ons.statistics.gov.uk/addresses?input=26%20FROG%20LANE%20TITCHFIELD%20PO144DU"
        ENDPOINT_URL="http://addressindex-api-dev.apps.cf1.ons.statistics.gov.uk/addresses?input=26%20FROG%20LANE%20TITCHFIELD%20PO144DU"
        PROXY="http://10.171.93.69:8080"
        GIT_TRACE=1
        GIT_TRACE_PERFORMANCE=1
        GIT_CURL_VERBOSE=1
    }
    options {
        skipDefaultCheckout()
        buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '30'))
        timeout(time: 1, unit: 'HOURS')
        ansiColor('xterm')
        timestamps()
    }
    agent { label 'download.jenkins.slave' }
    stages {
        stage('CheckProxyForCFEndpoint') {
            agent { label 'build.sbt_0-13-13' }
            steps {
                sh '''
                    set +e
                    echo " *********************** ENV *****************"
                    curl  --connect-timeout 10 --version
                    echo HTTP_PROXY : $HTTP_PROXY
                    echo HTTPS_PROXY : $HTTPS_PROXY
                    echo http_proxy : $http_proxy
                    echo https_proxy : $https_proxy
                    echo " ****************************************"

                    echo " *********************** CURL to $ENDPOINT_URL with no proxy and env proxy left unaltered  *****************"
                    curl  --connect-timeout 10 -v --insecure -L $ENDPOINT_URL
                    echo " ****************************************"

                    echo " *********************** CURL to $ENDPOINT_URL setting no proxy for everything *****************"
                    curl  --connect-timeout 10 -v --insecure --noproxy "*" -L $ENDPOINT_URL
                    echo " ****************************************"
                    
                    echo " *********************** CURL to $ENDPOINT_URL *WITH* $PROXY as Proxy *****************"
                    curl  --connect-timeout 10 -v --insecure -x $PROXY -L $ENDPOINT_URL
                    echo " ****************************************"

                    echo " *********************** CURL to $ENDPOINT_URL with no proxy and empty env proxy  *****************"
                    echo "Setting environmental proxy vars to empty"
                    export HTTP_PROXY=
                    export HTTPS_PROXY=
                    curl  --connect-timeout 10 -v --insecure -L $ENDPOINT_URL
                    echo " ****************************************"

                    set -e
                '''
                error("Build failed because of this and that..")
            }
        }

    }

    post {
        success {
            colourText("success", "All stages complete. Build was successful.")
            slackSend(
                    color: "good",
                    message: "${env.JOB_NAME} success: ${env.RUN_DISPLAY_URL}"
            )
        }
        unstable {
            colourText("warn", "Something went wrong, build finished with result ${currentResult}. This may be caused by failed tests, code violation or in some cases unexpected interrupt.")
            slackSend(
                    color: "danger",
                    message: "${env.JOB_NAME} unstable: ${env.RUN_DISPLAY_URL}"
            )
        }
        failure {
            colourText("warn", "Process failed at: ${env.NODE_STAGE}")
            slackSend(
                    color: "danger",
                    message: "${env.JOB_NAME} failed at ${env.STAGE_NAME}: ${env.RUN_DISPLAY_URL}"
            )
        }
    }
}
