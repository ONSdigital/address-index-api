authentication.encryptionKey = "FMsZatMIFcm4o]lQOo43P1URLNW_GCIyTqtnNL/0e_3b=wUP?xWgyM[p:uiTaaBx"

kamon.metric.factory.custom-settings {
    "http.server.connection.lifetime" {
        highest-trackable-value = 20000000000000000
    }
}

play {
  modules.enabled += "uk.gov.ons.addressIndex.server.modules.SystemBootstrapModule"
  i18n.langs = ["en"]
  http {
    requestHandler = "play.api.http.DefaultHttpRequestHandler"
    secret.key = "FMsZatMIFcm4o]lQOo43P1URLNW_GCIyTqtnNL/0e_3b=wUP?xWgyM[p:uiTaaBx"
  }

  server {
    # The server provider class name
    provider = "play.core.server.AkkaHttpServerProvider"
    akka {
      actor {
        default-dispatcher {

          executor = "thread-pool-executor"

          thread-pool-executor {
            # Keep alive time for threads
            keep-alive-time = 60s

            # Define a fixed thread pool size with this property. The corePoolSize
            # and the maximumPoolSize of the ThreadPoolExecutor will be set to this
            # value, if it is defined. Then the other pool-size properties will not
            # be used.
            #
            # Valid values are: `off` or a positive integer.
            fixed-pool-size = 24

            # Min number of threads to cap factor-based corePoolSize number to
            core-pool-size-min = 24

            # The core-pool-size-factor is used to determine corePoolSize of the
            # ThreadPoolExecutor using the following formula:
            # ceil(available processors * factor).
            # Resulting size is then bounded by the core-pool-size-min and
            # core-pool-size-max values.
            core-pool-size-factor = 3.0

            # Max number of threads to cap factor-based corePoolSize number to
            core-pool-size-max = 64

            # Minimum number of threads to cap factor-based maximumPoolSize number to
            max-pool-size-min = 24

            # The max-pool-size-factor is used to determine maximumPoolSize of the
            # ThreadPoolExecutor using the following formula:
            # ceil(available processors * factor)
            # The maximumPoolSize will not be less than corePoolSize.
            # It is only used if using a bounded task queue.
            max-pool-size-factor = 3.0

            # Max number of threads to cap factor-based maximumPoolSize number to
            max-pool-size-max = 64

            # Specifies the bounded capacity of the task queue (< 1 == unbounded)
            task-queue-size = -1

            # Specifies which type of task queue will be used, can be "array" or
            # "linked" (default)
            task-queue-type = "linked"

            # Allow core threads to time out
            allow-core-timeout = off
          }

          fork-join-executor {

            # Min number of threads to cap factor-based parallelism number to
            parallelism-min = 24

            # The parallelism factor is used to determine thread pool size using the
            # following formula: ceil(available processors * factor). Resulting size
            # is then bounded by the parallelism-min and parallelism-max values.
            parallelism-factor = 2

            # Max number of threads to cap factor-based parallelism number to
            parallelism-max = 24

            # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
            # like peeking mode which "pop".
            task-peeking-mode = "LIFO"
          }


        }
      }

      # How long to wait when binding to the listening socket
      bindTimeout = 30 seconds

      # How long a request takes until it times out. Set to null or "infinite" to disable the timeout.
      requestTimeout = infinite

      # Enables/disables automatic handling of HEAD requests.
      # If this setting is enabled the server dispatches HEAD requests as GET
      # requests to the application and automatically strips off all message
      # bodies from outgoing responses.
      # Note that, even when this setting is off the server will never send
      # out message bodies on responses to HEAD requests.
      transparent-head-requests = off

      # If this setting is empty the server only accepts requests that carry a
      # non-empty `Host` header. Otherwise it responds with `400 Bad Request`.
      # Set to a non-empty value to be used in lieu of a missing or empty `Host`
      # header to make the server accept such requests.
      # Note that the server will never accept HTTP/1.1 request without a `Host`
      # header, i.e. this setting only affects HTTP/1.1 requests with an empty
      # `Host` header as well as HTTP/1.0 requests.
      # Examples: `www.spray.io` or `example.com:8080`
      default-host-header = ""

      # The default value of the `Server` header to produce if no
      # explicit `Server`-header was included in a response.
      # If this value is null and no header was included in
      # the request, no `Server` header will be rendered at all.
      server-header = null
      server-header = ${?play.server.server-header}

      # Configures the processing mode when encountering illegal characters in
      # header value of response.
      #
      # Supported mode:
      # `error`  : default mode, throw an ParsingException and terminate the processing
      # `warn`   : ignore the illegal characters in response header value and log a warning message
      # `ignore` : just ignore the illegal characters in response header value
      illegal-response-header-value-processing-mode = warn

      # This setting is set in `akka.http.server.parsing.max-content-length`
      # Play uses the concept of a `BodyParser` to enforce this limit, so we override it to infinite.
      max-content-length = infinite

      # Enables/disables inclusion of an Tls-Session-Info header in parsed
      # messages over Tls transports (i.e., HttpRequest on server side and
      # HttpResponse on client side).
      #
      # See Akka HTTP `akka.http.server.parsing.tls-session-info-header` for
      # more information about how this works.
      tls-session-info-header = on


    }

    # The idle timeout for an open connection after it will be closed
    # set to null to disable the timeout
    https.idleTimeout = 900 seconds
    http.idleTimeout = 900 seconds
  }
}

addressIndex {
  runMode = "dev"

  apiKeyRequired = false
  apiKeyRequired = ${?ONS_AI_API_KEY_REQUIRED}

  masterKey = "donotputtherealkeyhere"
  masterKey = ${?ONS_AI_MASTER_KEY}

  sourceRequired = false
  sourceRequired = ${?ONS_AI_API_SOURCE_REQUIRED}

  sourceKey = "the interweb"
  sourceKey = ${?ONS_AI_API_SOURCE_NAME}

  pathToResources = "/"
  pathToResources = ${?ONS_AI_PATH_RESOURCES}

  parserLibPath = "/parsers/src/main/resources"
  parserLibPath = ${?ONS_AI_LIBRARY_PATH}

  termsAndConditionsLink = "https://census.gov.uk/terms-and-conditions"
  termsAndConditionsLink = ${?ONS_AI_TOC_LINK}

  elasticSearch {
    local = false

    gcp = "false"
    gcp = ${?ONS_AI_API_GCP}

    cluster = "address-index"
    cluster = ${?ONS_AI_API_ES_CLUSTER_NAME}

    uri = "localhost"
 //   uri = "search-ai-es-p-01-62qk73r6grdfk5nlefyi5tqyxe.eu-west-1.es.amazonaws.com"
    uri = ${?ONS_AI_API_ES_URI}
    // For GCP multiple ES clusters
    uriFullmatch = "localhost"
    uriFullmatch = ${?ONS_AI_API_ES_URI_FULLMATCH}

    port = "9200"
 //   port = "80"
    port = ${?ONS_AI_API_ES_PORT}

    ssl = "false"
    ssl = ${?ONS_AI_API_ES_SSL}

    basicAuth = "true"
 //   basicAuth = "false"
    basicAuth = ${?ONS_AI_API_ES_BASIC_AUTH}

    searchUser = "elastic"
    searchUser = ${?ONS_AI_API_SEARCH_USER}

    searchPassword = "elastic"
    searchPassword = ${?ONS_AI_API_SEARCH_PASSWORD}

    searchUserCen = "elastic"
    searchUserCen = ${?ONS_AI_API_CENSUS_SEARCH_USER}

    searchPasswordCen = "elastic"
    searchPasswordCen = ${?ONS_AI_API_CENSUS_SEARCH_PASSWORD}

    // Socket connection options to Akka API clients
    connectionTimeout = 60000
    connectionTimeout = ${?ONS_AI_API_ES_CONN_TIMEOUT}

    connectionRequestTimeout = 20000
    connectionRequestTimeout = ${?ONS_AI_API_ES_CONN_REQ_TIMEOUT}

    socketTimeout = 60000
    socketTimeout = ${?ONS_AI_API_ES_SOCKET_TIMEOUT}

    // Max number of connections to ElasticSearch
    maxESConnections = 20
    maxESConnections = ${?ONS_AI_API_ES_MAX_CONN}

    circuitBreakerMaxFailures = 5
    circuitBreakerMaxFailures = ${?ONS_AI_API_ES_CB_MAX_FAILURES} // Number of failures before the circuit breaker is opened

    circuitBreakerCallTimeout = 10000 // timeout to trigger the circuit breaker
    circuitBreakerCallTimeout = ${?ONS_AI_API_ES_CB_CALL_TIMEOUT}

    circuitBreakerResetTimeout = 30000 // reset the CB and try again time
    circuitBreakerResetTimeout = ${?ONS_AI_API_ES_CB_RESET_TIMEOUT}

    circuitBreakerMaxResetTimeout = 120000
    circuitBreakerMaxResetTimeout = ${?ONS_AI_API_ES_CB_MAX_RESET_TIMEOUT}

    circuitBreakerExponentialBackoffFactor = 2.0
    circuitBreakerExponentialBackoffFactor = ${?ONS_AI_API_ES_CB_EXP_BACK_FACTOR}

    // by default bulk and random run on one cluster, the rest on t'other
    clusterPolicies {
      bulk = ""
      bulk = ${?ONS_AI_API_BULK_CLUSTER_NO}
      address = ""
      address = ${?ONS_AI_API_LIVE_CLUSTER_NO}
      address = ${?ONS_AI_API_ADDRESS_CLUSTER_NO}
      partial = ""
      partial = ${?ONS_AI_API_LIVE_CLUSTER_NO}
      partial = ${?ONS_AI_API_PARTIAL_CLUSTER_NO}
      postcode = ""
      postcode = ${?ONS_AI_API_LIVE_CLUSTER_NO}
      postcode = ${?ONS_AI_API_POSTCODE_CLUSTER_NO}
      uprn = ""
      uprn = ${?ONS_AI_API_LIVE_CLUSTER_NO}
      uprn = ${?ONS_AI_API_UPRN_CLUSTER_NO}
      version = ""
      version = ${?ONS_AI_API_LIVE_CLUSTER_NO}
      version = ${?ONS_AI_API_VERSION_CLUSTER_NO}
      random = ""
      random = ${?ONS_AI_API_BULK_CLUSTER_NO}
      random = ${?ONS_AI_API_RANDOM_CLUSTER_NO}
    }

    indexes {
      hybridIndex = "index_full_nohist"
      hybridIndex = ${?ONS_AI_API_HYBRID_INDEX}
      hybridIndexHistorical = "index_full_hist"
      hybridIndexHistorical = ${?ONS_AI_API_HYBRID_INDEX_HIST}
      hybridIndexSkinny = "index_skinny_nohist"
      hybridIndexSkinny = ${?ONS_AI_API_HYBRID_INDEX_SKINNY}
      hybridIndexHistoricalSkinny = "index_skinny_hist"
      hybridIndexHistoricalSkinny = ${?ONS_AI_API_HYBRID_INDEX_HIST_SKINNY}
      auxiliaryIndex = "new-addresses"
      auxiliaryIndex = ${?ONS_AI_API_AUXILIARY_INDEX}
    }

    queryParams {
      subBuildingName {
        pafSubBuildingNameBoost = 1.5
        pafSubBuildingNameBoost = ${?ONS_AI_API_QUERY_SUB_BUILDING_NAME_PAF_SUB_BUILDING_NAME_BOOST}
        lpiSaoTextBoost = 1.5
        lpiSaoTextBoost = ${?ONS_AI_API_QUERY_SUB_BUILDING_NAME_LPI_SAO_TEXT_BOOST}
        lpiSaoStartNumberBoost = 1.0
        lpiSaoStartNumberBoost = ${?ONS_AI_API_QUERY_SUB_BUILDING_NAME_LPI_SAO_START_NUMBER_BOOST}
        lpiSaoStartSuffixBoost = 1.0
        lpiSaoStartSuffixBoost = ${?ONS_AI_API_QUERY_SUB_BUILDING_NAME_LPI_SAO_START_SUFFIX_BOOST}
        lpiSaoPaoStartSuffixBoost = 0.5
        lpiSaoPaoStartSuffixBoost = ${?ONS_AI_API_QUERY_SUB_BUILDING_NAME_LPI_SAO_PAO_START_SUFFIX_BOOST}
      }

      subBuildingRange {
        lpiSaoStartNumberBoost = 1.0
        lpiSaoStartNumberBoost = ${?ONS_AI_API_QUERY_SUB_BUILDING_RANGE_LPI_SAO_START_NUMBER_BOOST}
        lpiSaoStartSuffixBoost = 1.0
        lpiSaoStartSuffixBoost = ${?ONS_AI_API_QUERY_SUB_BUILDING_RANGE_LPI_SAO_START_SUFFIX_BOOST}
        lpiSaoEndNumberBoost = 1.0
        lpiSaoEndNumberBoost = ${?ONS_AI_API_QUERY_SUB_BUILDING_RANGE_LPI_SAO_END_NUMBER_BOOST}
        lpiSaoEndSuffixBoost = 1.0
        lpiSaoEndSuffixBoost = ${?ONS_AI_API_QUERY_SUB_BUILDING_RANGE_LPI_SAO_END_SUFFIX_BOOST}
        lpiSaoStartEndBoost = 0.1
        lpiSaoStartEndBoost = ${?ONS_AI_API_QUERY_SUB_BUILDING_RANGE_LPI_SAO_START_END_BOOST}
      }

      buildingName {
        lpiPaoStartSuffixBoost = 3.0
        lpiPaoStartSuffixBoost = ${?ONS_AI_API_QUERY_BUILDING_NAME_LPI_PAO_START_SUFFIX_BOOST}
        pafBuildingNameBoost = 2.5
        pafBuildingNameBoost = ${?ONS_AI_API_QUERY_BUILDING_NAME_PAF_BUILDING_NAME_BOOST}
        lpiPaoTextBoost = 2.5
        lpiPaoTextBoost = ${?ONS_AI_API_QUERY_BUILDING_NAME_LPI_PAO_TEXT_BOOST}
      }

      buildingNumber {
        pafBuildingNumberBoost = 3.0
        pafBuildingNumberBoost = ${?ONS_AI_API_QUERY_BUILDING_NUMBER_PAF_BUILDING_NUMBER_BOOST}
        lpiPaoStartNumberBoost = 3.5
        lpiPaoStartNumberBoost = ${?ONS_AI_API_QUERY_BUILDING_NUMBER_LPI_PAO_START_NUMBER_BOOST}
        lpiPaoEndNumberBoost = 0.1
        lpiPaoEndNumberBoost = ${?ONS_AI_API_QUERY_BUILDING_NUMBER_LPI_PAO_END_NUMBER_BOOST}
      }

      buildingRange {
        lpiPaoStartNumberBoost = 2.0
        lpiPaoStartNumberBoost = ${?ONS_AI_API_QUERY_BUILDING_RANGE_LPI_PAO_START_NUMBER_BOOST}
        lpiPaoStartSuffixBoost = 2.0
        lpiPaoStartSuffixBoost = ${?ONS_AI_API_QUERY_BUILDING_RANGE_LPI_PAO_START_SUFFIX_BOOST}
        lpiPaoEndNumberBoost = 2.0
        lpiPaoEndNumberBoost = ${?ONS_AI_API_QUERY_BUILDING_RANGE_LPI_PAO_END_NUMBER_BOOST}
        lpiPaoEndSuffixBoost = 2.0
        lpiPaoEndSuffixBoost = ${?ONS_AI_API_QUERY_BUILDING_RANGE_LPI_PAO_END_SUFFIX_BOOST}
        pafBuildingNumberBoost = 0.1
        pafBuildingNumberBoost = ${?ONS_AI_API_QUERY_BUILDING_RANGE_PAF_BUILDING_NUMBER_BOOST}
        lpiPaoStartEndBoost = 0.1
        lpiPaoStartEndBoost = ${?ONS_AI_API_QUERY_BUILDING_RANGE_LPI_PAO_START_END_BOOST}
      }

      streetName {
        pafThoroughfareBoost = 2.0
        pafThoroughfareBoost = ${?ONS_AI_API_QUERY_STREET_NAME_PAF_THOROUGHFARE_BOOST}
        pafWelshThoroughfareBoost = 2.0
        pafWelshThoroughfareBoost = ${?ONS_AI_API_QUERY_STREET_NAME_PAF_WELSH_THOROUGHFARE_BOOST}
        pafDependentThoroughfareBoost = 0.5
        pafDependentThoroughfareBoost = ${?ONS_AI_API_QUERY_STREET_NAME_PAF_DEPENDENT_THOROUGHFARE_BOOST}
        pafWelshDependentThoroughfareBoost = 0.5
        pafWelshDependentThoroughfareBoost = ${?ONS_AI_API_QUERY_STREET_NAME_PAF_WELSH_DEPENDENT_THOROUGHFARE_BOOST}
        lpiStreetDescriptorBoost = 2.0
        lpiStreetDescriptorBoost = ${?ONS_AI_API_QUERY_STREET_NAME_LPI_STREET_DESCRIPTOR_BOOST}
      }

      townName {
        pafPostTownBoost = 1.0
        pafPostTownBoost = ${?ONS_AI_API_QUERY_TOWN_NAME_PAF_POST_TOWN_BOOST}
        pafWelshPostTownBoost = 1.0
        pafWelshPostTownBoost = ${?ONS_AI_API_QUERY_TOWN_NAME_PAF_WELSH_POST_TOWN_BOOST}
        lpiTownNameBoost = 1.0
        lpiTownNameBoost = ${?ONS_AI_API_QUERY_TOWN_NAME_LPI_TOWN_NAME_BOOST}
        pafDependentLocalityBoost = 0.5
        pafDependentLocalityBoost = ${?ONS_AI_API_QUERY_TOWN_NAME_PAF_DEPENDENT_LOCALITY_BOOST}
        pafWelshDependentLocalityBoost = 0.5
        pafWelshDependentLocalityBoost = ${?ONS_AI_API_QUERY_TOWN_NAME_PAF_WELSH_DEPENDENT_LOCALITY_BOOST}
        lpiLocalityBoost = 0.5
        lpiLocalityBoost = ${?ONS_AI_API_QUERY_TOWN_NAME_LPI_LOCALITY_BOOST}
        pafDoubleDependentLocalityBoost = 0.2
        pafDoubleDependentLocalityBoost = ${?ONS_AI_API_QUERY_TOWN_NAME_PAF_DOUBLE_DEPENDENT_LOCALITY_BOOST}
        pafWelshDoubleDependentLocalityBoost = 0.2
        pafWelshDoubleDependentLocalityBoost = ${?ONS_AI_API_QUERY_TOWN_NAME_PAF_WELSH_DOUBLE_DEPENDENT_LOCALITY_BOOST}
      }

      postcode {
        pafPostcodeBoost = 1.0
        pafPostcodeBoost = ${?ONS_AI_API_QUERY_POSTCODE_PAF_POSTCODE_BOOST}
        lpiPostcodeLocatorBoost = 1.0
        lpiPostcodeLocatorBoost = ${?ONS_AI_API_QUERY_POSTCODE_LPI_POSTCODELOCATOR_BOOST}
        postcodeInOutBoost = 0.5
        postcodeInOutBoost = ${?ONS_AI_API_QUERY_POSTCODE_PAF_INCODE_BOOST}
      }

      organisationName {
        pafOrganisationNameBoost = 1.0
        pafOrganisationNameBoost = ${?ONS_AI_API_QUERY_ORGANISATION_NAME_PAF_ORIGANISATION_NAME_BOOST}
        lpiOrganisationBoost = 1.0
        lpiOrganisationBoost = ${?ONS_AI_API_QUERY_ORGANISATION_NAME_LPI_ORIGANISATION_BOOST}
        lpiPaoTextBoost = 1.0
        lpiPaoTextBoost = ${?ONS_AI_API_QUERY_ORGANISATION_NAME_LPI_PAO_TEXT_BOOST}
        lpiLegalNameBoost = 1.0
        lpiLegalNameBoost = ${?ONS_AI_API_QUERY_ORGANISATION_NAME_LPI_LEGALNAME_BOOST}
        lpiSaoTextBoost = 0.5
        lpiSaoTextBoost = ${?ONS_AI_API_QUERY_ORGANISATION_NAME_LPI_SAO_TEXT_BOOST}
      }

      departmentName {
        pafDepartmentNameBoost = 1.0
        pafDepartmentNameBoost = ${?ONS_AI_API_QUERY_DEPARTMENT_NAME_PAF_DEPARTMENT_NAME_BOOST}
        lpiLegalNameBoost = 0.5
        lpiLegalNameBoost = ${?ONS_AI_API_QUERY_DEPARTMENT_NAME_LPI_LEGAL_NAME_BOOST}
      }

      locality {
        pafPostTownBoost = 0.2
        pafPostTownBoost = ${?ONS_AI_API_QUERY_LOCALITY_PAF_POST_TOWN_BOOST}
        pafWelshPostTownBoost = 0.2
        pafWelshPostTownBoost = ${?ONS_AI_API_QUERY_LOCALITY_PAF_WELSH_POST_TOWN_BOOST}
        lpiTownNameBoost = 0.2
        lpiTownNameBoost = ${?ONS_AI_API_QUERY_LOCALITY_LPI_TOWN_NAME_BOOST}
        pafDependentLocalityBoost = 0.6
        pafDependentLocalityBoost = ${?ONS_AI_API_QUERY_LOCALITY_PAF_DEPENDENT_LOCALITY_BOOST}
        pafWelshDependentLocalityBoost = 0.6
        pafWelshDependentLocalityBoost = ${?ONS_AI_API_QUERY_LOCALITY_PAF_WELSH_DEPENDENT_LOCALITY_BOOST}
        lpiLocalityBoost = 0.6
        lpiLocalityBoost = ${?ONS_AI_API_QUERY_LOCALITY_LPI_LOCALITY_BOOST}
        pafDoubleDependentLocalityBoost = 0.3
        pafDoubleDependentLocalityBoost = ${?ONS_AI_API_QUERY_LOCALITY_PAF_DOUBLE_DEPENDENT_LOCALITY_BOOST}
        pafWelshDoubleDependentLocalityBoost = 0.3
        pafWelshDoubleDependentLocalityBoost = ${?ONS_AI_API_QUERY_LOCALITY_PAF_WELSH_DOUBLE_DEPENDENT_LOCALITY_BOOST}
      }

      fallback {
        fallbackQueryBoost = 0.5
        fallbackQueryBoost = ${?ONS_AI_API_FALLBACK_QUERY_BOOST}
        fallbackPafBoost = 1.0
        fallbackPafBoost = ${?ONS_AI_API_QUERY_FALLBACK_PAF_BOOST}
        fallbackLpiBoost = 1.0
        fallbackLpiBoost = ${?ONS_AI_API_QUERY_FALLBACK_LPI_BOOST}
        fallbackPafBigramBoost = 0.4
        fallbackPafBigramBoost = ${?ONS_AI_API_QUERY_FALLBACK_PAF_BIGRAM_BOOST}
        fallbackLpiBigramBoost = 0.4
        fallbackLpiBigramBoost = ${?ONS_AI_API_QUERY_FALLBACK_LPI_BIGRAM_BOOST}
        fallbackAuxBoost = 8.0
        fallbackAuxBoost = ${?ONS_AI_API_QUERY_FALLBACK_AUX_BOOST}
        fallbackAuxBigramBoost = 2.0
        fallbackAuxBigramBoost = ${?ONS_AI_API_QUERY_FALLBACK_AUX_BIGRAM_BOOST}
        fallbackMinimumShouldMatch = "-40%"
        fallbackMinimumShouldMatch = ${?ONS_AI_API_QUERY_FALLBACK_MINIMUM_SHOULD_MATCH}
        bigramFuzziness = "0"
        bigramFuzziness = ${?ONS_AI_API_QUERY_BIGRAM_FUZZINESS}
      }

      nisra {
        partialNiBoostBoost = 1.5
        partialNiBoostBoost = ${?ONS_AI_API_QUERY_NISRA_PARTIAL_NI_BOOST_BOOST}
        partialEwBoostBoost = 0.5
        partialEwBoostBoost = ${?ONS_AI_API_QUERY_NISRA_PARTIAL_EW_BOOST_BOOST}
    //    partialAllBoost = 0.8
    // temporary increase whilst reviewing issue of lower scores with new data
        partialAllBoost = 0.95
        partialAllBoost = ${?ONS_AI_API_QUERY_NISRA_PARTIAL_ALL_BOOST}
        fullFallBackNiBoost = 1.0
        fullFallBackNiBoost = ${?ONS_AI_API_QUERY_NISRA_FALLBACK_NI_BOOST}
        fullFallBackBigramNiBoost = 0.4
        fullFallBackBigramNiBoost = ${?ONS_AI_API_QUERY_NISRA_FALLBACK_NI_BIGRAM_BOOST}
      }

      excludingDisMaxTieBreaker = 0.0
      excludingDisMaxTieBreaker = ${?ONS_AI_API_QUERY_EXCLUDING_TIE_BREAKER_BOOST}
      includingDisMaxTieBreaker = 0.5
      includingDisMaxTieBreaker = ${?ONS_AI_API_QUERY_INCLUDING_TIE_BREAKER_BOOST}
      topDisMaxTieBreaker = 1.0
      topDisMaxTieBreaker = ${?ONS_AI_API_QUERY_TOP_DISMAX_TIE_BREAKER_BOOST}
      paoSaoMinimumShouldMatch = "-45%"
      paoSaoMinimumShouldMatch = ${?ONS_AI_API_QUERY_PAO_SAO_MINIMUM_SHOULD_MATCH}
      organisationDepartmentMinimumShouldMatch = "30%"
      organisationDepartmentMinimumShouldMatch = ${?ONS_AI_API_QUERY_ORGANISATION_DEPARTMENT_MINIMUM_SHOULD_MATCH}
      mainMinimumShouldMatch = "-40%"
      mainMinimumShouldMatch = ${?ONS_AI_API_QUERY_MAIN_MINIMUM_SHOULD_MATCH}
    }

    defaultLimit = 10
    defaultLimitPartial = 20
    defaultLimitPostcode = 100
    defaultLimitRandom = 1
    defaultOffset = 0
    maximumLimit = 100
    maximumLimitRandom = 1000
    maximumLimitPostcode = 11000
    maximumOffset = 250
    maximumOffsetPostcode = 5000
    matchThreshold = 5
    validEpochs = "39"
    validEpochs = ${?ONS_AI_API_VALID_EPOCHS}
    minimumSample = 5
    minimumSample = ${?ONS_AI_API_MIN_SAMPLE_SINGLE}
    minimumPartial = 5
    minimumPartial = ${?ONS_AI_API_MIN_PARTIAL_SIZE}
    minimumFallback = 8
    minimumFallback = ${?ONS_AI_API_MIN_FALLBACK_SIZE}
    defaultStartBoost = 8
    defaultStartBoost = ${?ONS_AI_API_DEFAULT_START_BOOST}
    scaleFactor = 11
    scaleFactor = ${?ONS_AI_API_SCALE_FACTOR}
  }

  bulk {
    batch {
      perBatch = 100
      perBatch = ${?ONS_AI_API_BULK_REQUESTS_PER_BATCH}
      upscale = 1.1
      upscale = ${?ONS_AI_API_BULK_REQUESTS_MINI_BATCH_UPSCALE}
      downscale = 0.9
      downscale = ${?ONS_AI_API_BULK_REQUESTS_MINI_BATCH_DOWNSCALE}
      warningThreshold = 0.25
      warningThreshold = ${?ONS_AI_API_BULK_REQUESTS_MINI_BATCH_SIZE_WARNING_THRESHOLD}
    }

    limitperaddress = 5
    maxLimitperaddress = 100
    matchThreshold = 10
    minimumSample = 5
    minimumSample = ${?ONS_AI_API_MIN_SAMPLE_BULK}
    scaleFactor = 23
    scaleFactor = ${?ONS_AI_API_BULK_SCALE_FACTOR}
  }
}

// maximum size of the POST request (server configuration)
play.http.parser.maxMemoryBuffer = 100000k
play.http.parser.maxMemoryBuffer = ${?ONS_AI_API_BULK_MAX_POST_SIZE}

play.http.parser.maxDiskBuffer = 100000k
play.http.parser.maxMemoryBuffer = ${?ONS_AI_API_BULK_MAX_POST_SIZE}

akka.http.server.request-timeout = 900s

akka.http.parsing.max-uri-length = 80k
play.akka.dev-mode.akka.http.parsing.max-uri-length = 80k

// play 2.6 must include s or ms
play.ws.timeout.request = 900s
play.ws.timeout.idle = 900s
play.ws.timeout.connection = 900s